package first_maven;

import java.util.Comparator;
import java.util.PriorityQueue;

public class Main   {
    PriorityQueue<Integer> min = new PriorityQueue<>();
    PriorityQueue<Integer> max = new PriorityQueue<>(10, new Comparator<Integer>(){
        @Override
        public int compare(Integer o1, Integer o2) {
            return o2 - o1;
        }

        
    });
    public void Insert(Integer num) {
        if (min.size() == max.size()) {
            if (max.size() == 0) {
                max.offer(num);
            } else {
                if (num > min.peek()) {
                    min.offer(num);
                    max.offer(min.poll());
                } else {
                    max.offer(num);
                }
            }
            
        } else {
            if (max.size() == 0) {
                max.offer(num);
            } else {
                if (num < max.peek()) {
                    max.offer(num);
                    min.offer(max.poll());
                } else {
                    min.offer(num);
                }
            }
            
        }
    }

    public Double GetMedian() {
        if (max.size() == min.size()) {
            return (max.peek() + min.peek()) / 2.0;
        }
        return (double)max.peek();
    }
    public static void main(String args[]) {
        Main m = new Main();
        m.Insert(5);
        System.out.println(m.GetMedian());
        m.Insert(2);
        System.out.println(m.GetMedian());
        m.Insert(3);
        System.out.println(m.GetMedian());
        m.Insert(4);
        System.out.println(m.GetMedian());
        m.Insert(1);
        System.out.println(m.GetMedian());
        m.Insert(6);
        System.out.println(m.GetMedian());
        m.Insert(7);
        System.out.println(m.GetMedian());
        m.Insert(0);
        System.out.println(m.GetMedian());
        m.Insert(8);
        System.out.println(m.GetMedian());
    }
    
}