package com.dlut.cmh.practice;

import java.util.Random;

public class Main {
    public static int partion(int[] arr, int left, int right) {
        if (left >= right) {
            return left;
        }
        Random random = new Random();
        int pivot = random.nextInt(right - left + 1) + left;
        swap(arr, pivot, right);
        int small = left - 1;
        for (int i = left; i < right; i++) {
            if (arr[i] < arr[pivot]) {
                small++;
                if (i != small) {
                    swap(arr, i, small);
                }
            }
        }
        swap(arr, ++small, pivot);
        return small;
    }
    public static void swap(int[] arr, int a, int b) {
        int tmp = arr[a];
        arr[a] = arr[b];
        arr[b] = tmp;
    }
    public static void quickSort(int[] arr, int left, int right) {
        if (arr == null || arr.length == 0 || left >= right) {
            return;
        }
        int pivot = partion(arr, left, right);
        quickSort(arr, left, pivot - 1);
        quickSort(arr, pivot + 1, right);
    }
    public static void main(String[] args) {
        int[] arr = {3,5,76,87,5,3,2,1};
        quickSort(arr, 0, arr.length - 1);
        for (int i = 0; i < arr.length - 1; i++) {
            System.out.println(arr[i]);
        }
    }
}