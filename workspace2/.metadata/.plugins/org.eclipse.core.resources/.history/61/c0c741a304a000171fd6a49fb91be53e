package first_maven;

import java.util.Random;
import java.util.Stack;

public class StackImpQueue {
    Stack<Integer> stack1;//顶部存储尾
    Stack<Integer> stack2;//顶部存储头
    int flag;
    public StackImpQueue() {
        stack1 = new Stack<>();
        stack2 = new Stack<>();
    }
    void print() {
        if (flag == 1) {
            while (!stack1.isEmpty()) {
                stack2.push(stack1.pop());
            }
            while (!stack2.isEmpty()) {
                System.out.println(stack2.pop());
            }
        } else {
            while (!stack2.isEmpty()) {
                System.out.println(stack2.pop());
            }
        }
    }
    public void appendTail(int i) {
        stack1.push(i);
    }
    public Integer deleteHead() {
        if (stack2.isEmpty()) {
            while (!stack1.isEmpty()) {
                stack2.push(stack2.pop());
            }
        }
        
        try {
            if (stack2.isEmpty()) {
                throw new Exception("队列为空");
            } else {
                return stack2.pop();
            }
        } catch (Exception e) {
            System.out.println("queue is empty");
            return null;
        }
    }
    public static void main(String[] args) {
        Random r = new Random();
        int a = 10;
        int b = 20;
        System.out.println((b-a)*r.nextFloat() + a);
        
    }
}
