package first_maven;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.PriorityQueue;


public class Main {
    public boolean hasPath(char[] matrix, int rows, int cols, char[] str)
    {
        if (matrix == null || matrix.length == 0 || rows <= 0 || cols <= 0 || str == null || str.length == 0) {
            return false;
        }
        int index = 0;
        boolean[][] use = new boolean[rows][cols];
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                if (helper(matrix, str, use, index, i, j, rows, cols)) {
                    return true;
                }
            }
        }
        return false;
    
    }
    public boolean helper(char[] matrix, char[] str, boolean[][] use, int index, int row, int col, int rows, int cols) {
        if (row >= 0 && col >= 0 && row < rows && col < cols && str[index] == matrix[row * cols + col] && !use[row][col]) {
            use[row][col] = true;
            index++;
            if (index == str.length) {
                return true;
            }
            if(helper(matrix, str, use, index, row, col - 1, rows, cols) || helper(matrix, str, use, index, row - 1, col, rows, cols) ||
                helper(matrix, str, use, index, row, col + 1, rows, cols) || helper(matrix, str, use, index, row + 1, col, rows, cols)) {
                return true;
            }
            index--;
            use[row][col] = false;
        }
        return false;
    }
    public static void main(String[] args) {
        Main m = new Main();
        char[] arr = {'a', 'b', 'c', 'e', 's', 'f', 'c', 's', 'a', 'd', 'e', 'e'};
        char[] str = {'a', 'b', 'c', 'd'};
        System.out.println(m.hasPath(arr, 3, 4, str));
        
    }
}